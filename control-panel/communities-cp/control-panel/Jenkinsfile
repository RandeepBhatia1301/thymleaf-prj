import groovy.json.JsonOutput
pipeline {
agent any
     parameters {
                string(name: 'Branch', defaultValue: 'prod', description: 'Which Branch needs to deploy')

                }
     //environment {
           // DOCKER_HOST = 'tcp://127.0.0.1:4243'
        //    DOCKER_HOST = 'tcp://192.168.99.101:2376'
           // scannerHome = tool 'SonarScanner'
            // }
stages {
      stage ('checkout') {
        steps {
          checkout scm: [$class: 'GitSCM', branches: [[name: '*/${Branch}']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: '/data/websites/reliance_prod/reliance_cp'], [$class: 'CleanBeforeCheckout']], userRemoteConfigs: [[credentialsId: 'c52d140f-7c3c-47c1-982b-5cd175c42b4b', url: 'http://gitlab.wddemo.net/reliance/communities-cp.git']]]

         }
       }
      stage ('package') {
        steps {
              sh 'java -version'
              sh 'mvn --version'
              sh 'cd /data/websites/reliance_prod/reliance_cp/${Service_Name}'
              sh "export _JAVA_OPTIONS=-Djdk.net.URLClassPath.disableClassPathURLCheck=true"
              sh "cd /data/websites/reliance_prod/reliance_cp/${Service_Name}; mvn clean install"
              sh "cd /data/websites/reliance_prod/reliance_cp/${Service_Name}; whoami; docker build -t ${Service_Name} ."

              }
            }
  stage ('junit test') {
         steps {
            //  sh "cd ${params.Service_Name}; mvn test"
            echo 'Junit Test'
     }
     }
     stage ('image push') {
     steps {

                sh 'docker login 146.88.26.140:8082 -u admin -p admin123'
                sh "docker tag ${Service_Name} 146.88.26.140:8082/${Service_Name}"
                sh "docker rmi ${Service_Name}"
                sh "docker push 146.88.26.140:8082/${Service_Name}"
                sh "docker rmi 146.88.26.140:8082/${Service_Name}"
// sh 'docker images -qf dangling=true | xargs docker rmi'
                sh "cd /data/websites/reliance_prod/reliance_cp/${Service_Name}/target; curl -v -u admin:admin123 --upload-file ${Service_Name}-1.0-SNAPSHOT.jar http://146.88.26.140:8081/repository/reliance-jars/"
              }
              }
    stage ('deploy') {
          steps {
                   sh "cd /data/websites/ansible;ansible-playbook deployment.yml  --extra-vars variable_host=${Server_Environment} --extra-vars Service_Name=${Service_Name} --extra-vars Port_Number=${port_number}"
                 }
             }
 /*stage('sonar') {
          steps {

             withSonarQubeEnv('SonarScanner') {
              sh "cd /data/websites/reliance_prod/reliance_cp/${Service_Name}; ${scannerHome}/bin/sonar-scanner -Dsonar.projectName=uat_${Service_Name} -Dsonar.projectKey=uat_${Service_Name} -Dsonar.sources=/data/websites/reliance_prod/reliance_cp/${Service_Name}/src -Dsonar.java.binaries=/data/websites/reliance_prod/reliance_cp/${Service_Name}/target/classes"
            //  sh 'cd /data/websites/reliance_prod/reliance_cp/${Service_Name}; mvn clean package sonar:sonar'

            }
            }*/
    }
}
